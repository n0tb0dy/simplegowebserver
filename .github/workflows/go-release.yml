name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.19'

    - name: Cache Go modules
      id: cache-go-mod
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Go mod tidy
      run: go mod tidy

    - name: Build
      run: |
        mkdir -p dist
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/simplegowebserver-${{ matrix.goos }}-${{ matrix.goarch }} simplegowebserver.go

    - name: Archive artifact
      uses: actions/upload-artifact@v4
      with:
        name: simplegowebserver-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/simplegowebserver-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: simplegowebserver-linux-amd64
        path: dist
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: simplegowebserver-linux-arm64
        path: dist
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: simplegowebserver-darwin-amd64
        path: dist
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: simplegowebserver-darwin-arm64
        path: dist
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: simplegowebserver-windows-amd64
        path: dist

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Set environment file
      run: echo "UPLOAD_URL=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_ENV

    - name: Upload Linux amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.UPLOAD_URL }}
        asset_path: dist/simplegowebserver-linux-amd64
        asset_name: simplegowebserver-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload Linux arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.UPLOAD_URL }}
        asset_path: dist/simplegowebserver-linux-arm64
        asset_name: simplegowebserver-linux-arm64
        asset_content_type: application/octet-stream

    - name: Upload Darwin amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.UPLOAD_URL }}
        asset_path: dist/simplegowebserver-darwin-amd64
        asset_name: simplegowebserver-darwin-amd64
        asset_content_type: application/octet-stream

    - name: Upload Darwin arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.UPLOAD_URL }}
        asset_path: dist/simplegowebserver-darwin-arm64
        asset_name: simplegowebserver-darwin-arm64
        asset_content_type: application/octet-stream

    - name: Upload Windows amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.UPLOAD_URL }}
        asset_path: dist/simplegowebserver-windows-amd64
        asset_name: simplegowebserver-windows-amd64.exe
        asset_content_type: application/octet-stream
